Filename:       dsp_Vpcm_PcmSub.bin
Format:         bin
Program size:   121 words
Orgin adress:   0xC691 (ram_fix)
Code adress:    0xC691 (ram_fix)
CPU type:       dsp1650 (Lucent FlashDSP 1650)

 --- PROGRAM START --- 

0xC691:    a1 & a1
0xC692:    test()
0xC692:    if eq {
0xC693:        goto 0xC696
0xC693:    }
0xC694:    a0 = a0h | 0x0080
0xC696:    test()
0xC696:    a0 = ~a0
0xC697:    a0 = a0h & 0x00FF
0xC699:    return
0xC69A:    a1 & a1
0xC69B:    test()
0xC69B:    if ne {
0xC69C:        goto 0xC69F
0xC69C:    }
0xC69D:    a0 = a0h | 0x0080
0xC69F:    a0 = a0h ^ 0x0055
0xC6A1:    return
0xC6A2:    *r3 = auc
0xC6A2:    r3--
0xC6A3:    auc = 0x0000
0xC6A5:    a0 = a0h ^ 0x00FF
0xC6A7:    a0l = 0x0000
0xC6A9:    test()
0xC6A9:    a1 = a0 >> 4
0xC6AA:    a1 = a1h & 0x0007
0xC6AC:    a1 = a1h + 0x0002
0xC6AE:    cloop = a1h
0xC6AF:    a1 = a0h & 0x000F
0xC6B1:    test()
0xC6B1:    a1 = a1 << 1
0xC6B2:    a1 = a1h + 0x0021
0xC6B4:    do cloop {
0xC6B5:        test()
0xC6B5:        a1 = a1 << 1
0xC6B5:    }
0xC6B6:    a1 = a1h - 0x0084
0xC6B8:    a0h & 0x0080
0xC6BA:    test()
0xC6BA:    if ne {
0xC6BA:        a1 = -a1
0xC6BA:    }
0xC6BB:    test()
0xC6BB:    a0 = a1
0xC6BC:    r3++
0xC6BD:    auc = *r3
0xC6BE:    return
0xC6BF:    *r3 = auc
0xC6BF:    r3--
0xC6C0:    auc = 0x0000
0xC6C2:    a0 = a0h ^ 0x00D5
0xC6C4:    a0l = 0x0000
0xC6C6:    test()
0xC6C6:    a1 = a0 >> 4
0xC6C7:    yh = 0x0007
0xC6C9:    a1 = a1 & y
0xC6CA:    test()
0xC6CA:    if eq {
0xC6CB:        goto 0xC6D5
0xC6CB:    }
0xC6CC:    cloop = a1h
0xC6CD:    a1 = a0h & 0x000F
0xC6CF:    test()
0xC6CF:    a1 = a1 << 1
0xC6D0:    a1 = a1h + 0x0021
0xC6D2:    do cloop {
0xC6D3:        test()
0xC6D3:        a1 = a1 << 1
0xC6D3:    }
0xC6D4:    goto 0xC6DA
0xC6D5:    a1 = a0h & 0x000F
0xC6D7:    test()
0xC6D7:    a1 = a1 << 1
0xC6D8:    test()
0xC6D8:    a1h = a1h + 1
0xC6D9:    test()
0xC6D9:    a1 = a1 << 1
0xC6DA:    a0h & 0x0080
0xC6DC:    test()
0xC6DC:    if ne {
0xC6DC:        a1 = -a1
0xC6DC:    }
0xC6DD:    test()
0xC6DD:    a0 = a1 << 1
0xC6DE:    test()
0xC6DE:    a0 = a0 << 1
0xC6DF:    r3++
0xC6E0:    auc = *r3
0xC6E1:    return
0xC6E2:    *r3 = pr
0xC6E2:    r3--
0xC6E3:    r1 = 0x2117
0xC6E5:    a1h = *r1
0xC6E6:    test()
0xC6E6:    a1 = a1
0xC6E7:    test()
0xC6E7:    if eq {
0xC6E8:        goto 0xC6EF
0xC6E8:    }
0xC6E9:    test()
0xC6E9:    a0 = y
0xC6EA:    a1h = k
0xC6EB:    pt = 0xC69A
0xC6ED:    call pt
0xC6EE:    goto 0xC6F4
0xC6EF:    test()
0xC6EF:    a0 = y
0xC6F0:    a1h = k
0xC6F1:    pt = 0xC691
0xC6F3:    call pt
0xC6F4:    test()
0xC6F4:    a1 = a0
0xC6F5:    r3++
0xC6F6:    pr = *r3
0xC6F7:    return
0xC6F8:    *r3 = pr
0xC6F8:    r3--
0xC6F9:    r1 = 0x2117
0xC6FB:    a1h = *r1
0xC6FC:    test()
0xC6FC:    a1 = a1
0xC6FD:    test()
0xC6FD:    if eq {
0xC6FE:        goto 0xC703
0xC6FE:    }
0xC6FF:    pt = 0xC6BF
0xC701:    call pt
0xC702:    goto 0xC706
0xC703:    pt = 0xC6A2
0xC705:    call pt
0xC706:    test()
0xC706:    a1 = a0
0xC707:    r3++
0xC708:    pr = *r3
0xC709:    return

 --- PROGRAM END ---
