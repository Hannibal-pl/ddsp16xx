Filename:       dsp_RT_FIX.bin
Format:         bin
Program size:   259 words
Orgin adress:   0xD800 (ram_fix)
Code adress:    0xD800 (ram_fix)
CPU type:       dsp1650 (Lucent FlashDSP 1650)

 --- PROGRAM START --- 

0xD800:    r0 = 0x0080
0xD801:    a0h = *r0
0xD802:    a0h - 0x9256
0xD804:    test()
0xD804:    if eq {
0xD805:        return
0xD805:    }
0xD806:    a0h - 0x9618
0xD808:    test()
0xD808:    if eq {
0xD809:        return
0xD809:    }
0xD80A:    *r3 = pr
0xD80A:    r3--
0xD80B:    k = 0x0000
0xD80C:    r2 = 0x0A51
0xD80E:    *r2 = k
0xD80F:    pt = 0x9AA2
0xD811:    call pt
0xD812:    k = 0x0000
0xD813:    r2 = 0x0CD8
0xD815:    *r2 = k
0xD816:    r2 = 0x0CC8
0xD818:    *r2 = k
0xD819:    k = 0x0011
0xD81A:    r2 = 0x0CD6
0xD81C:    *r2 = k
0xD81D:    pt = 0x9A4B
0xD81F:    call pt
0xD820:    r0 = 0x082E
0xD822:    a0h = *r0
0xD823:    yh = 0xFFFE
0xD825:    a0 = a0 & y
0xD826:    *r0 = a0h
0xD827:    r0 = 0x0DFA
0xD829:    r1 = 0x0801
0xD82B:    a1h = *r1
0xD82C:    *r0 = a1h
0xD82D:    k = 0x000C
0xD82E:    r1 = 0x0083
0xD82F:    a0h = *r1
0xD830:    test()
0xD830:    a0 = a0
0xD831:    test()
0xD831:    if eq {
0xD832:        goto 0xD834
0xD832:    }
0xD833:    k = 0x0000
0xD834:    pt = 0x9D74
0xD836:    call pt
0xD837:    k = 0x0011
0xD838:    r2 = 0x0CD1
0xD83A:    *r2 = k
0xD83B:    r0 = 0x0F20
0xD83D:    yh = 0xD842
0xD83F:    *r0 = yh
0xD840:    r3++
0xD841:    pr = *r3
0xD842:    r0 = 0x0080
0xD843:    a0h = *r0
0xD844:    yh = 0xD89B
0xD846:    a0h - 0x9276
0xD848:    test()
0xD848:    if eq {
0xD849:        goto 0xD88E
0xD849:    }
0xD84A:    yh = 0xD8A3
0xD84C:    a0h - 0x928C
0xD84E:    test()
0xD84E:    if eq {
0xD84F:        goto 0xD893
0xD84F:    }
0xD850:    yh = 0xD8AB
0xD852:    a0h - 0x92B8
0xD854:    test()
0xD854:    if eq {
0xD855:        goto 0xD893
0xD855:    }
0xD856:    yh = 0xD8B5
0xD858:    a0h - 0x9311
0xD85A:    test()
0xD85A:    if eq {
0xD85B:        goto 0xD893
0xD85B:    }
0xD85C:    yh = 0xD8BF
0xD85E:    a0h - 0x9638
0xD860:    test()
0xD860:    if eq {
0xD861:        goto 0xD87F
0xD861:    }
0xD862:    yh = 0xD8C7
0xD864:    a0h - 0x9662
0xD866:    test()
0xD866:    if eq {
0xD867:        goto 0xD893
0xD867:    }
0xD868:    yh = 0xD8D4
0xD86A:    a0h - 0x96B0
0xD86C:    test()
0xD86C:    if eq {
0xD86D:        goto 0xD893
0xD86D:    }
0xD86E:    a0h - 0x9239
0xD870:    test()
0xD870:    if eq {
0xD871:        goto 0xD887
0xD871:    }
0xD872:    a0h - 0x95FB
0xD874:    test()
0xD874:    if eq {
0xD875:        goto 0xD887
0xD875:    }
0xD876:    a0h - 0x9356
0xD878:    test()
0xD878:    if eq {
0xD879:        goto 0xD895
0xD879:    }
0xD87A:    a0h - 0x974D
0xD87C:    test()
0xD87C:    if eq {
0xD87D:        goto 0xD895
0xD87D:    }
0xD87E:    return
0xD87F:    r0 = 0x082E
0xD881:    yh = 0x0002
0xD883:    a0h = *r0
0xD884:    a0 = a0 | y
0xD885:    *r0 = a0h
0xD886:    goto 0xD88E
0xD887:    r0 = 0x082E
0xD889:    a0h = *r0
0xD88A:    a0 = a0h | 0x0001
0xD88C:    *r0 = a0h
0xD88D:    return
0xD88E:    k = 0x0001
0xD88F:    r2 = 0x00AA
0xD890:    *r2 = k
0xD891:    r2 = 0x00AB
0xD892:    *r2 = k
0xD893:    *r0 = yh
0xD894:    return
0xD895:    yh = 0x42F8
0xD897:    r0 = 0x0F20
0xD899:    *r0 = yh
0xD89A:    return
0xD89B:    call 0xD8DE
0xD89C:    pt = 0x91DE
0xD89E:    test()
0xD89E:    if ne {
0xD89F:        goto pt
0xD89F:    }
0xD8A0:    pt = 0x927C
0xD8A2:    goto pt
0xD8A3:    call 0xD8DE
0xD8A4:    pt = 0x91DE
0xD8A6:    test()
0xD8A6:    if ne {
0xD8A7:        goto pt
0xD8A7:    }
0xD8A8:    pt = 0x9292
0xD8AA:    goto pt
0xD8AB:    test()
0xD8AB:    if mi {
0xD8AC:        goto 0xD900
0xD8AC:    }
0xD8AD:    call 0xD8DE
0xD8AE:    pt = 0x91DE
0xD8B0:    test()
0xD8B0:    if ne {
0xD8B1:        goto pt
0xD8B1:    }
0xD8B2:    pt = 0x92C0
0xD8B4:    goto pt
0xD8B5:    test()
0xD8B5:    if mi {
0xD8B6:        goto 0xD900
0xD8B6:    }
0xD8B7:    call 0xD8DE
0xD8B8:    pt = 0x91DE
0xD8BA:    test()
0xD8BA:    if ne {
0xD8BB:        goto pt
0xD8BB:    }
0xD8BC:    pt = 0x9319
0xD8BE:    goto pt
0xD8BF:    call 0xD8DE
0xD8C0:    pt = 0x95A0
0xD8C2:    test()
0xD8C2:    if ne {
0xD8C3:        goto pt
0xD8C3:    }
0xD8C4:    pt = 0x963E
0xD8C6:    goto pt
0xD8C7:    test()
0xD8C7:    if mi {
0xD8C8:        goto 0xD8CC
0xD8C8:    }
0xD8C9:    pt = 0x9664
0xD8CB:    goto pt
0xD8CC:    call 0xD8DE
0xD8CD:    pt = 0x95A0
0xD8CF:    test()
0xD8CF:    if ne {
0xD8D0:        goto pt
0xD8D0:    }
0xD8D1:    pt = 0x9673
0xD8D3:    goto pt
0xD8D4:    test()
0xD8D4:    if mi {
0xD8D5:        goto 0xD900
0xD8D5:    }
0xD8D6:    call 0xD8DE
0xD8D7:    pt = 0x95A0
0xD8D9:    test()
0xD8D9:    if ne {
0xD8DA:        goto pt
0xD8DA:    }
0xD8DB:    pt = 0x96B8
0xD8DD:    goto pt
0xD8DE:    *r3 = pr
0xD8DE:    r3--
0xD8DF:    r0 = 0x0CD8
0xD8E1:    a0h = *r0
0xD8E2:    test()
0xD8E2:    a0 = a0
0xD8E3:    test()
0xD8E3:    if eq {
0xD8E4:        goto 0xD900
0xD8E4:    }
0xD8E5:    k = 0xFFFF
0xD8E6:    r2 = 0x0CDD
0xD8E8:    *r2 = k
0xD8E9:    k = 0x000F
0xD8EA:    r1 = 0x0083
0xD8EB:    a0h = *r1
0xD8EC:    test()
0xD8EC:    a0 = a0
0xD8ED:    test()
0xD8ED:    if eq {
0xD8EE:        goto 0xD8F0
0xD8EE:    }
0xD8EF:    k = 0x0003
0xD8F0:    pt = 0x9D74
0xD8F2:    call pt
0xD8F3:    r0 = 0x0CDC
0xD8F5:    a0h = *r0
0xD8F5:    r0++
0xD8F6:    yh = *r0
0xD8F7:    a0 - y
0xD8F8:    test()
0xD8F8:    if ne {
0xD8F9:        goto 0xD8FC
0xD8F9:    }
0xD8FA:    test()
0xD8FA:    a0 = a0
0xD8FB:    goto 0xD900
0xD8FC:    r0 = 0x0CD8
0xD8FE:    a0 = a0 ^ a0
0xD8FF:    *r0 = a0h
0xD900:    pt = 0x1FFD
0xD902:    goto pt

 --- PROGRAM END ---
